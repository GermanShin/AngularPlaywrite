pipeline {
    agent any

    parameters {
        choice(
            name: 'ENV',
            choices: ['dev', 'test', 'stg'],
            description: 'Select the environment to run Playwright tests against'
        )
    }

    environment {
        AWS_REGION = "ap-southeast-2"
        CODEBUILD_PROJECT = "PlaywrightProject938CE957-mPYWoqiDeDWu"
    }

    stages {
        stage('Echo Env File') {
        steps {
            echo "Selected env: ${params.ENV_FILE}"
        }
        }

        stage('Trigger CodeBuild') {
            steps {
                withAWS(credentials: 'david-shin-iam-user-cred', region: "${AWS_REGION}") {
                    script {
                        // Start build and get the build ID
                        def buildId = sh(
                            script: """
                                aws codebuild start-build \
                                    --project-name ${CODEBUILD_PROJECT} \
                                    --query 'build.id' \
                                    --output text
                            """,
                            returnStdout: true
                        ).trim()

                        echo "Started CodeBuild with ID: ${buildId}"

                        // Wait for build to finish
                        def status = "IN_PROGRESS"
                        while (status == "IN_PROGRESS" || status == "QUEUED") {
                            sleep(time: 10, unit: 'SECONDS')
                            status = sh(
                                script: """
                                    aws codebuild batch-get-builds \
                                        --ids ${buildId} \
                                        --query 'builds[0].buildStatus' \
                                        --output text
                                """,
                                returnStdout: true
                            ).trim()
                            echo "Current build status: ${status}"
                        }

                        // Fail Jenkins if CodeBuild failed
                        if (status != "SUCCEEDED") {
                            error("CodeBuild failed with status: ${status}")
                        } else {
                            echo "CodeBuild succeeded!"
                        }
                    }
                }
            }
        }
    }
}
